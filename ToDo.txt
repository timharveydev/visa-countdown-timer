Read up on:
* arrow functions
* js style guide (airbnb one is a simpler one to follow)


Code Review Comments:

5. It's very good that you have a desire to add comments to js functions to explain what they do. Just make sure you make it in a standardised way, something along the lines of: https://medium.com/4thought-studios/documenting-javascript-projects-f72429da2eea

10. Ternary operator will save you quite a few lines in the pluralisation code. Bonus points if you combine it with string interpolation to insert either 's' or '' at the end of the string.


----------

2. You are calling the getTime function 3 times with the same parameters. Consider calling it once and saving result in a variable which you'll re-use.

4. Now that we've cleaned up js/countdow.js a little bit we can see that the only difference between lines like 25-27 and 29-31 (and others) is one word ('year', 'month', etc), which also happens to be the unit of time you are using. This seems like a refactoring opportunity too good to pass on. Why don't we make a loop here, iterating through all the unit words, and perform text refreshing inside that loop. Potentially you'll be able to reduce number of lines from 25 to around 5-7.
For example, you've got this bit:
  document.querySelector('#week span').innerHTML = ('0' + getTime(seconds, 'week')['week']).slice(-2);
  document.querySelector('#week p').innerHTML = (getTime(seconds, 'week')['week'] === 1) ? 'Week' : 'Weeks';
  seconds = getTime(seconds, 'week').leftover;

Using string interpolation we can replace #week in querySelector by a dynamic value - unit of time. Then we do similar thing with the rest of the code, like getTime(seconds, timeUnit)[timeUnit]. Here timeUnit is your loop variable that holds the name of the time unit ('year', 'month', 'week', etc).